<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CRM</name>
    </assembly>
    <members>
        <member name="T:CRM.ActionNotFoundException">
            <summary>
            Klasa definiujaca wyjatek, oznaczajacy, ze dane dzialanie nie zostalo znalezione.
            </summary>
        </member>
        <member name="M:CRM.ActionNotFoundException.#ctor">
            <summary>
            Konstruktor wyjatku, wywolujacy konstruktor z klasy bazowej.
            </summary>
        </member>
        <member name="T:CRM.WynikDzialania">
            <summary>
            Typ wyliczeniowy, zawiera stale wartosci bedace wynikiem dzialania z klientem.
            </summary>
        </member>
        <member name="T:CRM.Dzialanie">
            <summary>
            Klasa definiujaca dzialania wobec klientow.
            </summary>
        </member>
        <member name="F:CRM.Dzialanie._nazwa">
            <summary>
            Nazwa dzialania.
            </summary>
        </member>
        <member name="F:CRM.Dzialanie._data">
            <summary>
            Data dzialania.
            </summary>
        </member>
        <member name="F:CRM.Dzialanie._pracownik">
            <summary>
            Praciwnik, ktory wykonal dzialanie.
            </summary>
        </member>
        <member name="F:CRM.Dzialanie._osobaKontaktowa">
            <summary>
            Osoba reprezentujaca klienta, z ktora sie skontaktowano.
            </summary>
        </member>
        <member name="F:CRM.Dzialanie._wynik">
            <summary>
            Ogolny rezultat podjetego dzialania.
            </summary>
        </member>
        <member name="F:CRM.Dzialanie._opis">
            <summary>
            Opis dzialania.
            </summary>
        </member>
        <member name="P:CRM.Dzialanie.Nazwa">
            <summary>
            Wlasciwosci.
            </summary>
        </member>
        <member name="M:CRM.Dzialanie.#ctor">
            <summary>
            konstruktor nieparametryczny
            </summary>
        </member>
        <member name="M:CRM.Dzialanie.#ctor(System.String,System.String)">
            <summary>
            Podstawowy konstruktor parametryczny.
            </summary>
            <param name="nazwa">Nazwa dzialania</param>
            <param name="data">Data dzialania</param>
        </member>
        <member name="M:CRM.Dzialanie.#ctor(System.String,System.String,CRM.WynikDzialania)">
            <summary>
            Konstruktor z dodatkowym parametrem wynik dzialania
            </summary>
            <param name="nazwa"></param>
            <param name="data"></param>
            <param name="wynik"></param>
        </member>
        <member name="M:CRM.Dzialanie.#ctor(System.String,System.String,CRM.WynikDzialania,System.String)">
            <summary>
            Konstruktor z dodatkowym parametrem opis
            </summary>
            <param name="nazwa"></param>
            <param name="data"></param>
            <param name="wynik"></param>
            /// <param name="opis"></param>
        </member>
        <member name="M:CRM.Dzialanie.#ctor(System.String,System.String,CRM.Pracownik,CRM.OsobaKontakt,CRM.WynikDzialania)">
            <summary>
            Bardziej szczegolowy konstruktor, wywoluje poprzedni.
            </summary>
            <param name="nazwa">Nazwa dzialania</param>
            <param name="data">Data dzialania</param>
            <param name="pracownik">Pracownik, ktory wykonal dzialanie</param>
            <param name="osobaKontaktowa">Osoba, z ktora skontaktowal sie pracownik</param>
            <param name="wynik">Ogolny rezultat dzialania</param>
        </member>
        <member name="M:CRM.Dzialanie.#ctor(System.String,System.String,CRM.Pracownik,CRM.OsobaKontakt,CRM.WynikDzialania,System.String)">
            <summary>
            Konstruktor, ktory ustawia wartosci dla wszystkich pol i wywoluje poprzedni konstruktor.
            </summary>
            <param name="nazwa">Nazwa dzialania</param>
            <param name="data">Data dzialania</param>
            <param name="pracownik">Pracownik, ktory wykonal dzialanie</param>
            <param name="osobaKontaktowa">Osoba, z ktora skontaktowal sie pracownik</param>
            <param name="wynik">Ogolny rezultat dzialania</param>
            <param name="opis">Opis dzialania</param>
        </member>
        <member name="M:CRM.Dzialanie.ToString">
            <summary>
            Meotda tworzy czytelna, tekstowa reprezentacje dzialania.
            </summary>
            <returns>Zwraca ciag opisujacy biezace dzialanie</returns>
        </member>
        <member name="M:CRM.Dzialanie.Clone">
            <summary>
            Metoda tworzy obiekt klasy dzialanie bedacy kopia biezacego dzialania.
            </summary>
            <returns>Zwraca nowe dzialanie bedace kopia danego dzialania</returns>
        </member>
        <member name="M:CRM.Dzialanie.CompareTo(CRM.Dzialanie)">
            <summary>
            Metoda porownuje dwa obiekty klasy dzialanie na podsatwie dat wykonania.
            </summary>
            <param name="other">Drugie dzialanie, ktore ma zostac porownane z biezacym obiektem</param>
            <returns>
            Zwraca liczbe ze znakiem, wskazujaca na kolejnosc porownywanych dzialan.
             Wartosc mniejsza od 0 oznacza, ze biezace dzialanie bylo wczesniej niz other.
             Wartosc rowna 0 oznacza, ze dzialania maja te sama date.
             Wartosc wieksza od 0 oznacza, ze dzialanie other bylo pozniej niz aktualne.
            </returns>
        </member>
        <member name="M:CRM.Dzialanie.Equals(CRM.Dzialanie)">
            <summary>
            Funkcja sprawdza, czy dwa dzialania sa tym samym dzialaniem.
            </summary>
            <param name="other">Dzialanie, z którym porównujemy.</param>
            <returns>Prawda, jeśli są,
            Fałsz, jeśli nie są.</returns>
        </member>
        <member name="T:CRM.ITworzyUmowy">
            <summary>
            Interfejs grupujący metody potrzebne do stowrzenia umowy
            </summary>
        </member>
        <member name="M:CRM.ITworzyUmowy.Koszt">
            <summary>
            Metoda licząca łączny koszt umowy
            </summary>
            <returns>Wartość double łącznego kosztu umowy</returns>
        </member>
        <member name="M:CRM.ITworzyUmowy.ZnajdzProdukt(System.String)">
            <summary>
            Metoda wyszukująca kod w umowie na podstawie kodu produktu
            </summary>
            <param name="kod">Kod szukanego produktu</param>
            <returns>Zwraca szukany produkt lub wyjątek ProductNotFoundException</returns>
        </member>
        <member name="M:CRM.ITworzyUmowy.JesliSztuki(CRM.Produkt,System.Double)">
            <summary>
            Metoda, która sprawdza czy jednostka miary produktu to szuka i jeśli tak - ilość zostaje zaokrąglona w dół do wartości całkowitych.
            </summary>
            <param name="produkt">Wybrany produkt dla którego sprawdzana jest jednostka</param>
            <param name="ilosc">Ilość wybranego produktu wprowadzona przez użytkownika</param>
            <returns>Wartość ilości produktu. Jeśli produkt liczony jest w sztukach, zwracana jest wartość ilości zaokrąlona w dół do najbliższej liczby całkowitej</returns>
        </member>
        <member name="M:CRM.ITworzyUmowy.DodajProdukt(CRM.Produkt)">
            <summary>
            Metoda dodająca 1 produkt do umowy. Jeśli produkt już jest w umowie, dodaje się do niego jedną jednostkę.
            </summary>
            <param name="produkt">Dodawany produkt</param>
        </member>
        <member name="M:CRM.ITworzyUmowy.DodajProdukt(CRM.Produkt,System.Double)">
            <summary>
            Metoda dodająca produkt do umowy wraz z ilością. Jeśli produkt już jest w umowie, dodaje się do istniejącej ilości dodatkowe jednostki nowej ilości.
            </summary>
            <param name="produkt">Dodawany produkt</param>
            <param name="ilosc">Ilość dodawanego produktu</param>
        </member>
        <member name="M:CRM.ITworzyUmowy.UsunProdukt(CRM.Produkt)">
            <summary>
            Metoda usuwająca produkt z umowy.
            </summary>
            <param name="produkt">Usuwany produkt.</param>
            <returns>True jeśli produkt był w umowie i został usunięty. W przeciwnym wypadku - false</returns>
        </member>
        <member name="M:CRM.ITworzyUmowy.UsunProduktKod(System.String)">
            <summary>
            Metoda usuwająca produkt z umowy wg kodu produktu.
            </summary>
            <param name="kod">Kod usuwanego produktu</param>
            <returns>True jeśli produkt był w umowie i został usunięty. W przeciwnym wypadku - false</returns>
        </member>
        <member name="M:CRM.ITworzyUmowy.ZmienIlosc(CRM.Produkt,System.Double)">
            <summary>
            Metoda zmieniająca ilość produktu będącego w umowie.
            </summary>
            <param name="produkt">Wybrany produkt</param>
            <param name="ilosc">Nowa ilość produktu</param>
            <returns>True jeśli produkt był w umowie i zmieniono jego ilość na nową, w przeciwnym wypadku - false</returns>
        </member>
        <member name="M:CRM.ITworzyUmowy.ZmienIloscKod(System.String,System.Double)">
            <summary>
            Metoda zmieniająca ilość produktu będącego w umowie wg kodu produktu.
            </summary>
            <param name="kod">Kod wybranego produktu</param>
            <param name="ilosc">Nowa ilość produktu</param>
            <returns>True jeśli produkt był w umowie i zmieniono jego ilość na nową, w przeciwnym wypadku - false</returns>
        </member>
        <member name="T:CRM.IZapisywalna">
            <summary>
            Interfejs definiujący metodę, która umożliwia zapis danych do pliku XML oraz do pliku JSON
            </summary>
        </member>
        <member name="M:CRM.IZapisywalna.ZapiszXML(System.String)">
            <summary>
            Metoda do zapisu w pliku XML
            </summary>
            <param name="nazwa"> parametrem jest nazwa pliku </param>
        </member>
        <member name="M:CRM.IZapisywalna.ZapiszJSON(System.String)">
            <summary>
            Metoda do zapisu w pliku JSON
            </summary>
            <param name="nazwa"></param>
        </member>
        <member name="T:CRM.Status">
            <summary>
            Enumeracja, zawiera mozliwe wartosci statusu klienta.
            </summary>
        </member>
        <member name="T:CRM.Klient">
            <summary>
            Klasa definiujaca klientow firmy.
            </summary>
        </member>
        <member name="F:CRM.Klient._listaKontaktow">
            <summary>
            Lista osob w firmie, z ktorymi mozemy sie kontaktowac.
            </summary>
        </member>
        <member name="F:CRM.Klient._dataPlanowanegoKontaktu">
            <summary>
            Data planowanego kontaktu.
            </summary>
        </member>
        <member name="F:CRM.Klient._status">
            <summary>
            Aktualny status klienta.
            </summary>
        </member>
        <member name="F:CRM.Klient._dzialania">
            <summary>
            Historia kontaktow i dzialan podjetych wobec klienta.
            </summary>
        </member>
        <member name="F:CRM.Klient._transakcje">
            <summary>
            Transakcje zawarte z klientem.
            </summary>
        </member>
        <member name="F:CRM.Klient._uwagi">
            <summary>
            Uwagi dotyczace klienta.
            </summary>
        </member>
        <member name="F:CRM.Klient._transakcjeList">
            <summary>
            Zmienna pomocnicza, do serializacji transakcji.
            </summary>
        </member>
        <member name="F:CRM.Klient._dzialaniaList">
            <summary>
            Zmienna pomocnicza do serializacji dzialan.
            </summary>
        </member>
        <member name="M:CRM.Klient.#ctor">
            <summary>
            Konstruktor nieparametryczny.
            </summary>
        </member>
        <member name="M:CRM.Klient.#ctor(System.String,CRM.Branże)">
            <summary>
            Konsruktor parametryczny odwolujacy sie do konstruktora klasy bazowej.
            </summary>
            <param name="nazwa">Nazwa firmy, bedacej naszym klientem</param>
            <param name="branza">Branza w jakiej dziala firma</param>
        </member>
        <member name="M:CRM.Klient.#ctor(System.String,CRM.Branże,System.String,System.String,System.String,System.String)">
            <summary>
            Szczegolowy konsruktor parametryczny odwolujacy sie do konstruktora klasy bazowej.
            </summary>
            <param name="nazwa">Nazwa firmy, bedacej naszym klientem</param>
            <param name="branza">Branza w jakiej dziala firma</param>
            <param name="nip">NIP firmy</param>
            <param name="kraj">Kraj, w ktorym dzia firma</param>
            <param name="miasto">Miasto, w ktorym dzia firma</param>
            <param name="dataZalozenia">Data zalozenia firmy</param>
        </member>
        <member name="M:CRM.Klient.#ctor(System.String,CRM.Branże,System.String,System.String,System.String,System.String,System.String,System.String,CRM.Status)">
            <summary>
            Konstruktor dla wszstkich pol.
            </summary>
            <param name="nazwa">Nazwa firmy, bedacej naszym klientem</param>
            <param name="branza">Branza w jakiej dziala firma</param>
            <param name="nip">NIP firmy</param>
            <param name="kraj">Kraj, w ktorym dzia firma</param>
            <param name="miasto">Miasto, w ktorym dzia firma</param>
            <param name="dataZalozenia">Data zalozenia firmy</param>
            <param name="dataPlanowKontaktu">Planowany kontakt z klientem</param>
            <param name="uwagi">Uwagi dotyczace firmy</param>
            <param name="status">Aktualny status klienta</param>
        </member>
        <member name="P:CRM.Klient.DataPlanowanegoKontaktu">
            <summary>
            Wlasciwosci.
            </summary>
        </member>
        <member name="M:CRM.Klient.DodajDzialanie(CRM.Dzialanie)">
            <summary>
            Dodaje dzialanie do listy dzialan.
            </summary>
            <param name="dzialanie">Dzialanie, ktore ma sie znalezc na liscie dzialan</param>
        </member>
        <member name="M:CRM.Klient.ZnajdzDzialanie(System.String)">
            <summary>
            Metoda szukajaca ostatniego wystapienia dzialania o podanej nazwie
            </summary>
            <param name="nazwa">Nazwa szukanego dzialania</param>
            <returns>
            Zwraca pierwsze wystapienie dzialania o podanej nazwie.
            Jesli dzialania o podanej nazwie nie ma na liscie, wyrzuca wyjatek.
            </returns>
        </member>
        <member name="M:CRM.Klient.IleDzialan">
            <summary>
            Oblicza ile dzialan ogolem podjeto wobec klienta.
            </summary>
            <returns>Zwraca liczbe dzialan podjetych wobec klienta</returns>
        </member>
        <member name="M:CRM.Klient.OstatniKontakt">
            <summary>
            Wyszukuje date ostatniego kontaktu z klientem
            </summary>
            <returns>Zwraca date ostatniego kontaktu</returns>
        </member>
        <member name="M:CRM.Klient.ZnajdzDzialania(System.String)">
            <summary>
            Wyszukuje wszystkie dzialania od podanej daty do dzisiaj
            </summary>
            <param name="dataOd">Data, od ktorej zaczynaja byc szukane dzialania</param>
            <returns>Lista dzialan od podanej daty do dziś</returns>
        </member>
        <member name="M:CRM.Klient.ZnajdzPlanowaneDzialania">
            <summary>
            Wyszukuje wszytskie przyszłe działania.
            </summary>
            <returns>Zwraca listę przyszłych działań</returns>
        </member>
        <member name="M:CRM.Klient.ZnajdzDzialania(CRM.Pracownik)">
            <summary>
            Wyszukuje wszystkie kontakty danego pracownika z klientem.
            </summary>
            <param name="pracownik">Pracownik, ktorego kontaktow z klientem szukamy</param>
            <returns>Lista kontaktow danego pracownika z klientem</returns>
        </member>
        <member name="M:CRM.Klient.UsunDzialanie(CRM.Dzialanie)">
            <summary>
            Usuwa podane dzialanie z listy dzialan.
            </summary>
            <param name="d">Dzialanie do usuniecia</param>
        </member>
        <member name="M:CRM.Klient.UsunDzialanie(System.String)">
            <summary>
            Usuwa pierwsze wystapienie dzialania o podanej nazwie z listy dzialan.
            </summary>
            <param name="nazwa">Nazwa dzialania, ktore ma zostac usuniete</param>
            <returns>Zwraca prawde, jesli usuniecie powiodlo sie, w przeciwnym wypadku falsz</returns>
        </member>
        <member name="M:CRM.Klient.UsunWszystkieDzialania">
            <summary>
            Usuwa wszystkie dzialania z listy dzialan.
            </summary>
        </member>
        <member name="M:CRM.Klient.ZwrocDzialania">
            <summary>
            Zwraca wszystkie dzialania w formie listy.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CRM.Klient.IleKontaktow">
            <summary>
            Oblicza liczbe osob do kontaktu z klientem;
            </summary>
            <returns>Liczba osob na liscie kontaktow</returns>
        </member>
        <member name="M:CRM.Klient.DodajKontakt(CRM.OsobaKontakt)">
            <summary>
            Dodaje osobe do listy kontaktow z firma.
            </summary>
            <param name="o">Osoba do kontaktu</param>
            <returns>Zwraca prawde, jesli dodanie powiodlo sie, w przeciwnym wypadku falsz</returns>
        </member>
        <member name="M:CRM.Klient.UsunKontakt(CRM.OsobaKontakt)">
            <summary>
            Usuwa dana osobe z listy kontaktow.
            </summary>
            <param name="o">Osoba do usuniecia z listy kontaktow</param>
            <returns>Zwraca prawde, jesli usuniecie powiodlo sie, w przeciwnym wypadku falsz</returns>
        </member>
        <member name="M:CRM.Klient.UsunWszystkieKontakty">
            <summary>
            Metoda usuwa wszystkie kontakty z listy kontaktow
            </summary>
        </member>
        <member name="M:CRM.Klient.PosiadaKontakt(System.String,System.String)">
            <summary>
            Metoda sparwdza czy dana osoba jest juz w liscie kontaktow.
            </summary>
            <param name="imie">Imie sprawdzanej osoby</param>
            <param name="nazwisko">Nazwisko sprawdzanej osoby</param>
            <returns>Zwraca prawde jesli osoba jest na liscie kontaktow, w przeciwnym wypadku falsz</returns>
        </member>
        <member name="M:CRM.Klient.ZwrocKontakt(System.String,System.String)">
            <summary>
            Metoda wyszukuje osobe kotaktowa o podanym imieniu i nazwisku.
            </summary>
            <param name="imie">Imie szukanej osoby</param>
            <param name="nazwisko">Nazwisko szukanej osoby</param>
            <returns>
            Zwraca osobe kontaktowa o podanym imieniu i nazwisku.
            Jesli osoba nie zostala znaleziona zostaje wyrzucony wyjatek NonOrganizationMemberException.
            </returns>
        </member>
        <member name="M:CRM.Klient.DodajTransakcje(CRM.Umowa)">
            <summary>
            Metoda dodaje umowe do listy transakcji z klientem.
            </summary>
            <param name="umowa">Umowa, ktora ma zostac dodana do listy transakcji</param>
        </member>
        <member name="M:CRM.Klient.UsunTransakcje(System.String)">
            <summary>
            Metoda, ktora usuwa dana umowe z listy transakcji.
            </summary>
            <param name="numer">Numer umowy, ktora ma zostac usunieta</param>
            <returns>Zwraca prawde, jesli usuniecie umowy powiodlo sie, w przeciwnym wypadku falsz</returns>
        </member>
        <member name="M:CRM.Klient.UsunTransakcje(CRM.Umowa)">
            <summary>
            Metoda, ktora usuwa dana umowe z listy transakcji.
            </summary>
            <param name="umowa">Umowa która ma zostać usunięta</param>
            <returns>Zwraca prawde, jesli usuniecie umowy powiodlo sie, w przeciwnym wypadku falsz</returns>
        </member>
        <member name="M:CRM.Klient.ZnajdzTransakcje(System.String)">
            <summary>
            Metoda wyszukuje wszystkie transakcje podpisane z klientem od podanej daty do dzis
            </summary>
            <param name="data">Data, od ktorej maja zaczac byc szukane transakcje</param>
            <returns>Zwraca liste znalezionych traksakcji lub null jesli zadna nie zostala znaleziona</returns>
        </member>
        <member name="M:CRM.Klient.ZwrocTransakcje(System.String)">
            <summary>
            Metoda wyszukuje stransakcje o podanym numerze
            </summary>
            <param name="numer">Numer szukanej transakcji</param>
            <returns>Zwraca transakcje o podanym numerze</returns>
        </member>
        <member name="M:CRM.Klient.ZwrocTransakcjePracownik(CRM.Pracownik)">
            <summary>
            Metoda wyszukująca transakcje zawarte przez podanego pracownika.
            </summary>
            <param name="p">Szukany pracownik odpowiedzialny za zawarcie umowy</param>
            <returns>Lista transakcji zawartych przez podanego pracownika </returns>
        </member>
        <member name="M:CRM.Klient.AktualizujStatus">
            <summary>
            Metoda ktualizujaca status klienta
            </summary>
        </member>
        <member name="M:CRM.Klient.AktualizujDatePlanKontaktu">
            <summary>
            Metoda aktualizuje date planowanego kontaktu:
            Jesli daty nie ma to ustawia ja na dzis.
            Jesli data jest w przyszlosci, to pozostaje bez zmian.
            Jesli data juz minela, to sa dwie mozliwosci:
            Jesli ostatni kontakt z klientem byl mniej niz 2 tygodnie temu, to ustalana jest na dwa tygodnie po ostatnim kontakcie.
            Jesli ostatni kontakt z klientem byl wiecej niz 2 tygodnie temu, to ustalana jest na dzien dzisiejszy.
            </summary>
        </member>
        <member name="M:CRM.Klient.ToString">
            <summary>
            Tworzy czytelny dla czlowieka opis klienta.
            </summary>
            <returns>Zwraca ciag znakow bedacy opisem danego klienta</returns>
        </member>
        <member name="M:CRM.Klient.WypiszTransakcje">
            <summary>
            Meotda tworzy czytelna, tekstowa reprezentacje wszystkich transakcji z klientem i wypisuje je na konsoli.
            </summary>
        </member>
        <member name="M:CRM.Klient.WypiszDzialania">
            <summary>
            Metoda wypisuje na konsoli w czytelny sposob wszystkie kontakty i dzialania podjete wobec klienta.
            </summary>
        </member>
        <member name="M:CRM.Klient.WypiszKontakty">
            <summary>
            Metoda wypisuje na konsoli liste osob kontaktowych z klientem:
            </summary>
        </member>
        <member name="M:CRM.Klient.SortujDzialania(System.Boolean)">
            <summary>
            Metoda sortujaca malejaco lub rosnaco liste dzialan wg dat.
            </summary>
            <param name="odNajblizszego">
            Jesli parametr przyjmie wartosc prawda, to dzialania sa sortowane od najnowszych do najstarszych.
            Jesli otrzyma wartosc falsz, to dzialania sa sortowane od najstarszych do najnowszych.
            Domyslnie prawda.
            </param>
        </member>
        <member name="M:CRM.Klient.SortujKontakty(System.Boolean)">
            <summary>
            Metoda sortujaca malejaco lub rosnaco liste kontaktow wg nazwisk.
            </summary>
            <param name="malejaco">
            Jesli parametr przyjmie wartosc falsz, to kontakty sa sortowane nazwiskami od A do Z.
            Jesli otrzyma wartosc prawda, to kontakty sa sortowane od Z do A.
            Domyslnie falsz.
            </param>
        </member>
        <member name="M:CRM.Klient.Clone">
            <summary>
            Metoda tworzy obiekt klasy klient bedacy kopia biezacego klienta.
            </summary>
            <returns>Zwraca nowego klienta bedacego kopia biezacego</returns>
        </member>
        <member name="M:CRM.Klient.StosDoListy">
            <summary>
            Metoda pomocnicza zapisujaca dane ze stosow do list po serializacji.
            </summary>
        </member>
        <member name="M:CRM.Klient.ListaDoStosu">
            <summary>
            Metoda pomocnicza zapisujaca dane z list do stosow po deserializacji.
            </summary>
        </member>
        <member name="M:CRM.Klient.ZapiszXML(System.String)">
            <summary>
            Metoda zapisuje dane o kliencie do pliku XML.
            </summary>
            <param name="nazwa">Nazwa pliku do którego zapisujemy dane, zakonczona na ".xml"</param>
        </member>
        <member name="M:CRM.Klient.OdczytajXML(System.String)">
            <summary>
            Metoda odczytująca dane klienta z pliku XML.
            </summary>
            <param name="nazwa">Nazwa pliku z którego odczytujemy dane, musi się kończyć na ".xml"</param>
            <returns>Zwraca odczytany plik jako obiekt klasy Klient</returns>
        </member>
        <member name="M:CRM.Klient.ZapiszJSON(System.String)">
            <summary>
            Metoda zapisująca dane klienta w pliku JSON
            </summary>
            <param name="nazwa"> nazwa pliku </param>
        </member>
        <member name="M:CRM.Klient.OdczytajJSON(System.String)">
            <summary>
            Metoda odczytująca dane o kliencie z pliku JSON
            </summary>
            <param name="nazwa"> nazwa pliku </param>
            <returns></returns>
        </member>
        <member name="T:CRM.Konkurent">
            <summary>
            Klasa dziedzicząca po klasie Organizacja, poza polami i metodami z klasy Organizacja dodatkowo niesie
            informację o stopniu zagrożenia ze strony konkretnego konkurenta
            </summary>
        </member>
        <member name="T:CRM.Konkurent.StopienZagrozenia">
            <summary>
            Typ wyliczeniowy, zawiera informację o stopniu zagrożenia
            </summary>
        </member>
        <member name="M:CRM.Konkurent.#ctor">
            <summary>
            Konstruktor domyślny, dziedziczący po konstruktorze domyślnym z klasy bazowej
            </summary>
        </member>
        <member name="M:CRM.Konkurent.#ctor(System.String,CRM.Branże)">
            <summary>
            Konstruktor parametryczny, dziedziczący po konstruktorze z dwoma parametrami z klasy bazowej
            </summary>
            <param name="nazwa"></param>
            <param name="branza"></param>
        </member>
        <member name="M:CRM.Konkurent.#ctor(System.String,CRM.Branże,System.String,System.String,System.String,System.String,CRM.Konkurent.StopienZagrozenia)">
            <summary>
            Konstruktor parametryczny, dziedziczący po kosntruktorze z dwoma parametrami z klasy bazowej
            </summary>
            <param name="nazwa"></param>
            <param name="branza"></param>
            <param name="nip"></param>
            <param name="kraj"></param>
            <param name="miasto"></param>
            <param name="dataZalozenia"></param>
            <param name="zagrozenie"></param>
        </member>
        <member name="M:CRM.Konkurent.CzyToTeSameFirmy(CRM.Konkurent,CRM.Konkurent)">
            <summary>
            Metoda, która korzystając z funkcji Equals zdefiniowanej z klasie Organizacja, sprawdza, czy dwa obiekty
            klasy Konkurent (dwie organizacje będące konkurentami) są równe - czy to ta sama firma
            </summary>
            <param name="k1"> pierwszy obiekt klasy Konkurent </param>
            <param name="k2"> drugi obiekt klasy Konkurent </param>
            <returns></returns>
        </member>
        <member name="M:CRM.Konkurent.ZapiszXML(System.String)">
            <summary>
            Metoda  umożliwiająca zapis obiektu do pliku xml
            </summary>
            <param name="nazwa"> parametr jest nazwą pliku xml </param>
        </member>
        <member name="M:CRM.Konkurent.OdczytajXML(System.String)">
            <summary>
            Metoda pozwalająca na odczyt danych z pliku xml o podanej nazwie
            </summary>
            <param name="nazwa"> parametr jest nazwą pliku xml </param>
            <returns></returns>
        </member>
        <member name="M:CRM.Konkurent.ZapiszJSON(System.String)">
            <summary>
            Metoda zapisująca dane o konkurencie w pliku JSON
            </summary>
            <param name="nazwa"> nazwa pliku </param>
        </member>
        <member name="M:CRM.Konkurent.OdczytajJSON(System.String)">
            <summary>
            Metoda odczytująca dane o konkurencie z pliku JSON
            </summary>
            <param name="nazwa"> nazwa pliku </param>
            <returns></returns>
        </member>
        <member name="M:CRM.Konkurent.Clone">
            <summary>
            Metoda klonująca obiekt klasy Konkurent
            </summary>
            <returns></returns>
        </member>
        <member name="M:CRM.Konkurent.ToString">
            <summary>
            Metoda nadpisywana z klasy Organizacja, wypisuje czytelny opis obiektów klasy Konkurent
            </summary>
            <returns></returns>
        </member>
        <member name="T:CRM.NonOrganizationMemberException">
            <summary>
            Klasa tworzaca wyjatek, oznaczajacy ze dana osoba nie jest czlonkiem organizacji.
            </summary>
        </member>
        <member name="M:CRM.NonOrganizationMemberException.#ctor">
            <summary>
            Konstruktor, wysolujacy konstruktor klasy bazowej.
            </summary>
        </member>
        <member name="T:CRM.Branże">
            <summary>
            Typ wyliczeniowy, zawiera rodzaje branży w których specjalizują się organizacje
            </summary>
        </member>
        <member name="T:CRM.Organizacja">
            <summary>
            Klasa abstrakcyjna, po której dziedziczą klasy takiej jak Konkurent, Klient
            </summary>
        </member>
        <member name="F:CRM.Organizacja.wzorNip">
            <summary>
            Wyrażenie regularne wskazujące na poprawny format numeru NIP
            </summary>
        </member>
        <member name="P:CRM.Organizacja.Nip">
            <summary>
            Metoda akcesorowa do prywatnego pola: nip
            </summary>
        </member>
        <member name="P:CRM.Organizacja.Nazwa">
            <summary>
            Metoda akcesorowa do prywatnego pola: nazwa
            </summary>
        </member>
        <member name="P:CRM.Organizacja.Branza">
            <summary>
            Metoda akcesorowa do prywatnego pola: branza
            </summary>
        </member>
        <member name="P:CRM.Organizacja.Kraj">
            <summary>
            Metoda akcesorowa do prywatnego pola: kraj
            </summary>
        </member>
        <member name="P:CRM.Organizacja.Miasto">
            <summary>
            Metoda akcesorowa do prywatnego pola: miasto
            </summary>
        </member>
        <member name="P:CRM.Organizacja.Adres">
            <summary>
            Metoda akcesorowa do prywatnego pola: adres
            </summary>
        </member>
        <member name="P:CRM.Organizacja.KodPocztowy">
            <summary>
            Metoda akcesorowa do prywatnego pola: kodPocztowy
            </summary>
        </member>
        <member name="P:CRM.Organizacja.Notatki">
            <summary>
            Metoda akcesorowa do prywatnego pola: notatki
            </summary>
        </member>
        <member name="P:CRM.Organizacja.DataZalozenia">
            <summary>
            Metoda akcesorowa do prywatnego pola: dataZalozenia
            </summary>
        </member>
        <member name="M:CRM.Organizacja.#ctor">
            <summary>
            Konstruktor domyślny klasy
            </summary>
        </member>
        <member name="M:CRM.Organizacja.#ctor(System.String,CRM.Branże)">
            <summary>
            Konstruktor parametryczny klasy dziedziczący po konstruktorze bazowym
            </summary>
            <param name="nazwa"> nazwa organizacji </param>
            <param name="branza"> nazwa branzy organizacji </param>
        </member>
        <member name="M:CRM.Organizacja.#ctor(System.String,CRM.Branże,System.String,System.String,System.String,System.String)">
            <summary>
            Konstruktor z większą liczbą parametrów, dziedziczy po poprzednim konstruktorze parametrycznym
            </summary>
            <param name="nazwa"></param>
            <param name="branza"></param>
            <param name="nip"></param>
            <param name="kraj"></param>
            <param name="miasto"></param>
            <param name="dataZalozenia"></param>
        </member>
        <member name="M:CRM.Organizacja.CompareTo(CRM.Organizacja)">
            <summary>
            Metoda porównująca obiekty klas dziedziczących po klasie Organizacja po nazwie (alfabetycznie)
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Organizacja.Equals(CRM.Organizacja)">
            <summary>
            Metoda sprawdzająca czy dwie organizacje "są równe" - przyjmujemy że organizacje są równe gdy posiadają
            takie same nazwy, branże i adresy NIP
            </summary>
            <param name="other"> parametrem jest inny obiekt tej samej klasy </param>
            <returns></returns>
        </member>
        <member name="M:CRM.Organizacja.Clone">
            <summary>
            Metoda, która umożliwia utworzenie kopii obiektu
            </summary>
            <returns></returns>
        </member>
        <member name="M:CRM.Organizacja.ZapiszXML(System.String)">
            <summary>
            Metoda umożliwiająca zapis danych do pliku XML - nadpisywana w klasie Konkurent
            </summary>
            <param name="nazwa"> parametr jest nazwą pliku xml </param>
        </member>
        <member name="M:CRM.Organizacja.ToString">
            <summary>
            Tworzy czytelny opis obiektu organizacja, metoda nadpisywana zostaje w klasie Konkurent
            </summary>
            <returns> Zwraca opis obiektu </returns>
        </member>
        <member name="F:CRM.OrgProwadzacaCRM._listaPracownikow">
            <summary>
            Lista zawierająca wszystkich pracowników organizacji.
            </summary>
        </member>
        <member name="F:CRM.OrgProwadzacaCRM._listaProduktow">
            <summary>
            Lista zawierająca wszystkie produkty, które sprzedaje organizacja.
            </summary>
        </member>
        <member name="F:CRM.OrgProwadzacaCRM._listaKonkurentow">
            <summary>
            Lista zawierająca wszystkich konkurentów organizacji.
            </summary>
        </member>
        <member name="F:CRM.OrgProwadzacaCRM._listaKlientow">
            <summary>
            Lista zawierająca wszystkich klientów organizacji.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.DodajPracownika(CRM.Pracownik)">
            <summary>
            Metoda dodająca obiekt Pracownik do listy pracowników organizacji. Powoduje wyrzucenie wyjątku AlreadyInListException(), jeżeli taki obiekt już znajduje się na liście.
            </summary>
            <param name="p">Obiekt Pracownik.</param>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunPracownika(System.String,System.String,CRM.Stanowiska)">
            <summary>
            Metoda usuwając pracownika z listy pracowników organizacji.
            </summary>
            <param name="imie">Imie pracownika.</param>
            <param name="nazwisko">Nazwisko pracownika.</param>
            <param name="stanowisko">Stanowisko pracownika.</param>
            <returns>Prawdę, jeśli taki pracownik był na liście i go usunięto,
            Fałsz, jeśli takiego pracownika nie było.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunPracownika(CRM.Pracownik)">
            <summary>
            Metoda usuwając pracownika z listy pracowników organizacji.
            </summary>
            <param name="p">Obiekt Pracownik.</param>
            <returns>Prawdę, jeśli taki pracownik był na liście i go usunięto,
            Fałsz, jeśli takiego pracownika nie było.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunWszystkichPracownikow">
            <summary>
            Metoda usuwa wszystkich pracowników z listy.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.PodajIloscPracownikow">
            <summary>
            Metoda podaje liczbę pracowników pracujących w organizacji.
            </summary>
            <returns>Liczba pracowników.
            -1 jeśli taka lista nie istnieje.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.JestPracownikiem(CRM.Pracownik)">
            <summary>
            Metoda sprawdza, czy podany obiekt Pracownik znajduje się na liście pracowników.
            </summary>
            <param name="p">Obiekt Pracownik</param>
            <returns>Prawdę, jeśli obiekt Pracownik jest pracownikiem oraganizacji prowadzącej CRM,
            Fałsz, jeśli nie jest.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.JestPracownikiem(System.String,System.String,CRM.Stanowiska)">
            <summary>
            Metoda sprawdza, czy pracownik o podanym Imeiniu, Nazwisku i Stanowisku znajduje się na liście pracowników.
            </summary>
            <param name="imie">Imie pracownika.</param>
            <param name="nazwisko">Nazwisko pracownika.</param>
            <param name="stanowisko">Stanowisko pracownika.</param>
            <returns>Prawdę, jeśli obiekt o takich parametrach jest pracownikiem oraganizacji prowadzącej CRM,
            Fałsz, jeśli nie jest.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkichPracownikowStanowisko(CRM.Stanowiska)">
            <summary>
            Metoda wyszukuje wszystkich pracowników organizacji znajdujących się na podanym stanowisku.
            </summary>
            <param name="stanowisko">Stanowisko.</param>
            <returns>Lista pracowników, znajdujących się na podanym stanowisku.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkichPracownikowPlec(CRM.Plcie)">
            <summary>
            Metoda wyszukuje wszystkich pracowników organizacji o podane płci.
            </summary>
            <param name="plec">Płeć.</param>
            <returns>Lista pracowników, o podanej płci.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkichPracownikowPracaPrzed(System.String)">
            <summary>
            Metoda wyszukuje wszystkich pracowników organizacji, którzy zaczeli w niej pracować przed podaną datą.
            </summary>
            <param name="dataRozpoczecia">Data.</param>
            <returns>Lista pracowników, którzy zostali zatrudnieni przed podaną datą.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.PracownicySortujAlfabetycznie">
            <summary>
            Metoda sortuje wszystkich pracowników alfabetycznie, najpierw po nazwisku, potem po imieniu.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.PracownicySortujPoDacieZatrudnienia(System.Boolean)">
            <summary>
            Metoda sortuje wszystkich pracowników po dacie zatrudnienia. 
            </summary>
            <param name="rosnaco">True oznacza sortowanie od najwcześniejszego zatrudnienia do najpóźniejszego,
            False oznacza sortowanie od najpóźniejszego zatrudnienia do najwcześniejszego.</param>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.DodajProdukt(CRM.Produkt)">
            <summary>
            Metoda dodająca obiekt Produkt do listy produktów jakie oferuje organizacja. Powoduje wyrzucenie wyjątku AlreadyInListException(), jeżeli taki obiekt już znajduje się na liście.
            </summary>
            <param name="p">Obiekt Produkt.</param>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunProdukt(System.String)">
            <summary>
            Metoda usuwająca produkt z listy produktów, jakie oferuje organizacja, po podanym kodzie produktu.
            </summary>
            <param name="kod">Kod.</param>
            <returns>Prawdę, jeśli taki produkt był na liście i go usunięto,
            Fałsz, jeśli takiego produktu nie było.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunProdukt(CRM.Produkt)">
            <summary>
            Metoda usuwając obiekt Produkt z listy produktów, jakie oferuje organizacja.
            </summary>
            <param name="p">Obiekt Produkt.</param>
            <returns>Prawdę, jeśli taki produkt był na liście i go usunięto,
            Fałsz, jeśli takiego produktu nie było.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunWszystkieProdukty">
            <summary>
            Metoda usuwa wszystkie produkty z listy produktów.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.PodajIloscProduktow">
            <summary>
            Metoda oblicza liczbę produktów oferowanych przez organizację.
            </summary>
            <returns>Liczba produktów.
            -1 jeśli taka lista nie istnieje.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.JestProduktem(CRM.Produkt)">
            <summary>
            Metoda sprawdza, czy podany obiekt Produkt znajduje się na liście produktów organizacji.
            </summary>
            <param name="p">Obiekt Produkt.</param>
            <returns>Prawdę, jeśli obiekt Produkt jest produktem oferowanym przez organizację prowadzącą CRM,
            Fałsz, jeśli nie jest.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.JestProduktem(System.String)">
            <summary>
            Metoda sprawdza, czy produkt o podanym kodzie znajduje się na liście produktó organizacji.
            </summary>
            <param name="kod">Kod produktu.</param>
            <returns>Prawdę, jeśli obiekt o takim kodzie jest produktem oferowanym przez oraganizację prowadzącą CRM,
            Fałsz, jeśli nie jest.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkieProduktyCena(System.Double,System.Boolean)">
            <summary>
            Metoda wyszukuje wszystkie produkty oferowane przez organizację prowadzącą CRM poniżej lub powyżej podanej ceny.
            </summary>
            <param name="porownywalnaCena">Cena wobec której porównywane są produkty.</param>
            <param name="tansze">Parametr służący do opisania, czy chcemy zobaczyć produkty tańsze czy droższe. True oznacza, że chcemy uzyskać produkty tańsze (co też jest domyślną wartością), a false, że produkty droższe od podanej ceny.</param>
            <returns>Listę produktów tańszych/droższych od podanej ceny.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzProduktKod(System.String)">
            <summary>
            Metoda wyszukuje wszystkie produkty o podanym kodzie.
            </summary>
            <param name="kod">Jednostka.</param>
            <returns>Listę produktów o danym kodzie.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkieProduktyJednostka(CRM.Jednostki)">
            <summary>
            Metoda wyszukuje wszystkie produkty oferowane przez organizację, które sprzedawane są w podanej jednostce.
            </summary>
            <param name="jednostka">Jednostka.</param>
            <returns>Listę produktów o danej jednostce.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ProduktySortujPoCenie(System.Boolean)">
            <summary>
            Metoda sortująca produkty oferowane przez organizację prowadzącą CRM według ceny. 
            </summary>
            <param name="rosnaco">True, produkty sortowane są rosnąco wg ceny; False, produkty sortowane są malejąco wg ceny.</param>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ProduktySortujPoKodzie">
            <summary>
            Metoda sortuje wszystkich produkty alfabetycznie po ich kodzie.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.DodajKonkurenta(CRM.Konkurent)">
            <summary>
            Metoda dodająca obiekt Konkurent do listy konkurentów organizacji. Powoduje wyrzucenie wyjątku AlreadyInListException(), jeżeli taki obiekt już znajduje się na liście.
            </summary>
            <param name="k">Obiekt Konkurent</param>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunKonkurenta(System.String)">
            <summary>
            Metoda usuwająca konkurenta z listy konkurentów organizacji po jego Nazwie.
            </summary>
            <param name="nazwa">Nazwa organizacji konkurencyjnej.</param>
            <returns>Prawdę, jeśli taki konkurent był na liście i go usunięto,
            Fałsz, jeśli takiego konkurenta nie było.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunKonkurenta(CRM.Konkurent)">
            <summary>
            Metoda usuwając konkurenta z listy konkurentów organizacji.
            </summary>
            <param name="k">Obiekt Konkurent.</param>
            <returns>Prawdę, jeśli taki konkurent był na liście i go usunięto,
            Fałsz, jeśli takiego konkurenta nie było.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunWszystkichKonkurentow">
            <summary>
            Metoda usuwa wszystkich konkurentoów z listy konkurentów organizacji.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.PodajIloscKonkurentow">
            <summary>
            Podaje liczbę konkurentów organizacji prowadzącej CRM.
            </summary>
            <returns>Liczba konkurentów.
            -1 jeśli taka lista nie istnieje.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.JestKonkurentem(CRM.Konkurent)">
            <summary>
            Metoda sprawdza, czy podany obiekt Konkurent znajduje się na liście konkurentów.
            </summary>
            <param name="k">Obiekt Konkurent.</param>
            <returns>Prawdę, jeśli obiekt Konkurent jest konkurentem oraganizacji prowadzącej CRM,
            Fałsz, jeśli nie jest.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.JestKonkurentem(System.String)">
            <summary>
            Metoda sprawdza, czy konkurent o podanej nazwie znajduje się na liście konkurentów.
            </summary>
            <param name="nazwa">Nazwa szukanej konkurencyjnej organizacji.</param>
            <returns>Prawdę, jeśli obiekt o takich parametrach jest konkurentem oraganizacji prowadzącej CRM,
            Fałsz, jeśli nie jest.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkichKonkurentowZagrozenie(CRM.Konkurent.StopienZagrozenia)">
            <summary>
            Metoda wyszukuje wszystkich konkurentów organizacji prowadzącej CRM o podanym stopiu zagrożenia.
            </summary>
            <param name="zagrozenie">Stopień zagrożenia.</param>
            <returns>Listę konkurentów, o podanym stopniu zagrożenia.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkichKonkurentowKraj(System.String)">
            <summary>
            Metoda wyszukuje wszystkich konkurentów organizacji prowadzącej CRM znajdujących się w podanym kraju.
            </summary>
            <param name="kraj"></param>
            <returns>Listę konkurentów, znajdujących się w podanym kraju.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.KonkurenciSortujAlfabetycznie">
            <summary>
            Metoda sortuje wszystkich konkurentów alfabetycznie po nazwie.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.KonkurenciSortujDataZalozenia">
            <summary>
            Metoda sortuje wszystkich konkurentów według daty założenia organizacji.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.DodajKlienta(CRM.Klient)">
            <summary>
            Metoda dodająca obiekt Klient do listy klientów organizacji. Powoduje wyrzucenie wyjątku AlreadyInListException(), jeżeli taki obiekt już znajduje się na liście.
            </summary>
            <param name="k">Obiekt Klient</param>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunKlienta(System.String)">
            <summary>
            Metoda usuwająca klienta z listy klientów organizacji po jego nazwie.
            </summary>
            <param name="nazwa">Nazwa.</param>
            <returns>Prawdę, jeśli taki klient był na liście i go usunięto,
            Fałsz, jeśli takiego konkurenta nie było.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunKlienta(CRM.Klient)">
            <summary>
            Metoda usuwająca obiekt Klient z listy klientów organizacji prowadzącej CRM.
            </summary>
            <param name="k">Obiekt Klient.</param>
            <returns>Prawdę, jeśli taki klient był na liście i go usunięto,
            Fałsz, jeśli takiego klienta nie było.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.UsunWszystkichKlientow">
            <summary>
            Metoda usuwa wszystkich klientów z listy klientów organizacji.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.PodajIloscKlientow">
            <summary>
            Podaje liczbę klientów organizacji prowadzącej CRM.
            </summary>
            <returns>Liczba klientów.
            -1 jeśli taka lista nie istnieje.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.JestKlientem(CRM.Klient)">
            <summary>
            Metoda sprawdza, czy podany obiekt Klient znajduje się na liście klientów organizcji prowadzącej CRM.
            </summary>
            <param name="k">Obiekt Klient.</param>
            <returns>Prawdę, jeśli obiekt Klient jest klientem oraganizacji prowadzącej CRM,
            Fałsz, jeśli nie jest.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.JestKlientem(System.String)">
            <summary>
            Metoda sprawdza, czy klient o podanej Nazwie znajduje się na liście klientów organizacji prowadzącej CRM.
            </summary>
            <param name="nazwa">Nazwa szukanego klienta.</param>
            <returns>Prawdę, jeśli obiekt o takiej nazwie jest klientem oraganizacji prowadzącej CRM,
            Fałsz, jeśli nie jest.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkichKlientowPlanowanyKontakt(System.Int32)">
            <summary>
            Metoda wyszukuje wszystkich klientów organizacji prowadzącej CRM, z którymi planowany kontakt ma odbyć się za podaną liczbę dni. Domyślnie wyszukuje klientów, z którymi planowany kontakt jest ustawiony na dzisiaj.
            </summary>
            <param name="ZaIleDni">Liczba dni, za którą ma się odbyć planowany kontakt z klientem.</param>
            <returns>Listę klientów, z którymi planowany kontakt jest ustawiony za podaną liczbę dni.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkichKlientowOstatniKontakt(System.Int32)">
            <summary>
            Metoda wyszukuje wszystkich klientów organizacji prowadzącej CRM, z którymi ostatnio kontaktowano się podaną liczbę dni temu. Domyślnie wyszukuje klientów, z którymi osatnio kontaktowano się 2 tygodnie temu.
            </summary>
            <param name="IleDniTemu">Liczba dni jaka minęła odkąd kontaktowano się z klientem.</param>
            <returns>Listę klientów, z którymi kontaktowano się ustaloną liczbę dni temu.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZnajdzWszystkichKlientowStatus(CRM.Status)">
            <summary>
            Metoda wyszukuje wszystkich klientów organizacji prowadzącej CRM o podanym statusie.
            </summary>
            <param name="status">Status.</param>
            <returns>Listę klientów, o podanym statusie.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.KlienciSortujAlfabetycznie">
            <summary>
            Metoda sortuje wszystkich klientów alfabetycznie po nazwie organizacji.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.KlienciSortujDataPlanowanegoKontaktu">
            <summary>
            Metoda sortuje wszystkich klientów według daty planowanego kontaktu.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.KlienciSortujDataOstatniegoKontaktu">
            <summary>
            Metoda sortuje wszystkich klientów według daty ostatniego kontaktu.
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.AktualizujStatusKlientow">
            <summary>
            Metoda aktualizuje statusy wszystkich klientów organizacji
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.AktualizujDatyPlanowanychKontaktow">
            <summary>
            Metoda aktualizuje daty planowanych kontaktow ze wszystkimi klientami organizacji
            </summary>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZapiszXML(System.String)">
            <summary>
            Metoda zapisuje dane organizacji, która prowadzi CRM do pliku XML.
            </summary>
            <param name="nazwa">Nazwa pliku do którego zapisujemy dane, musi się kończyć na ".xml".</param>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.OdczytajXML(System.String)">
            <summary>
            Metoda odczytująca dane organizacji, która prowadzi CRM z pliku XML.
            </summary>
            <param name="nazwa">Nazwa pliku z którego odczytujemy dane, musi się kończyć na ".xml".</param>
            <returns>Odczytany plik jako obiekt klasy OrgProwadzacaCRM.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ZapiszJSON(System.String)">
            <summary>
            Metoda zapisuje dane organizacji, która prowadzi CRM do pliku JSON.
            </summary>
            <param name="nazwa">Nazwa pliku do którego zapisujemy dane, musi się kończyć na ".json".</param>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.OdczytajJSON(System.String)">
            <summary>
            Metoda odczytująca dane organizacji, która prowadzi CRM z pliku JSON.
            </summary>
            <param name="nazwa">Nazwa pliku z którego odczytujemy dane, musi się kończyć na ".json".</param>
            <returns>Odczytany plik jako obiekt klasy OrgProwadzacaCRM.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.WypiszProdukty">
            <summary>
            Metoda wypisująca na konsolę wszystkie produkty, jakie oferuje organizacja prowadząca CRM.
            </summary>
            <returns>Napis zawierający informacje o wszystkich produktach z listy produktów organizacji.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.WypiszPracownikow">
            <summary>
            Metoda wypisująca na konsolę wszystkich pracowników organizacji prowadzącej CRM.
            </summary>
            <returns>Napis zawierający informacje o wszystkich pracownikach organizacji.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.WypiszKonkurentow">
            <summary>
            Metoda wypisująca na konsolę wszystkich konkurentów organizacji prowadzącej CRM.
            </summary>
            <returns>Napis zawierający informacje o wszystkich konkurentach organizacji.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.WypiszKlientow">
            <summary>
            Metoda wypisująca na konsolę wszystkich klientów organizacji prowadzącej CRM.
            </summary>
            <returns>Napis zawierający informacje o wszystkich klientach organizacji.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.ToString">
            <summary>
            Metoda wypisująca na konsolę wszystkie informacje o organizacji prowadzącej CRM oraz jej pracowników, konkurentów, klientów i produkty, które oferuje.
            </summary>
            <returns>Napis zawierający informacje o całej organizacji prowadzącej CRM.</returns>
        </member>
        <member name="M:CRM.OrgProwadzacaCRM.Clone">
            <summary>
            Metoda tworzy kopię bieżącego obiektu klasy OrgProwadzacaCRM.
            </summary>
            <returns>Obiekt OrgProwadzacaCRM będący kopią bieżącego produktu</returns>
        </member>
        <member name="T:CRM.Stanowiska">
            <summary>
            Typ wyliczeniowy, zawiera stanowiska, na jakim są osoby kontaktowe.
            </summary>
        </member>
        <member name="T:CRM.Plcie">
            <summary>
            Typ wyliczeniowy, zawiera płcie.
            </summary>
        </member>
        <member name="T:CRM.Osoba">
            <summary>
            Klasa abstrakcyjna definiująca osobę.
            </summary>
        </member>
        <member name="F:CRM.Osoba._imie">
            <summary>
            Imię osoby.
            </summary>
        </member>
        <member name="F:CRM.Osoba._nazwisko">
            <summary>
            Nazwisko osoby.
            </summary>
        </member>
        <member name="F:CRM.Osoba._plec">
            <summary>
            Płeć osoby.
            </summary>
        </member>
        <member name="F:CRM.Osoba._stanowisko">
            <summary>
            Stanowisko jakie zajmuje osoba.
            </summary>
        </member>
        <member name="M:CRM.Osoba.FormatZWielkiej(System.String)">
            <summary>
            Metoda gwarantująca, że wpisany napis będzie zaczynał się z wielkiej litery, a wszystkie następujące litery będą małe.
            </summary>
            <param name="napis">Napis, który chcemy zmienić.</param>
            <returns>Podany napis zaczynający się z wielkiej litery, a wszystkie litery potem są małe</returns>
        </member>
        <member name="M:CRM.Osoba.CompareTo(CRM.Osoba)">
            <summary>
            Porównuje dwie osoby ze sobą, najpierw po nazwisku, potem po imieniu. 
            </summary>
            <param name="other">Osoba, z którą porównujemy.</param>
            <returns>
            Zwraca waryość porównania nazwisk:
            0 jeżeli nazwiska obydwu osób są równe
            mniej niż 0 jeżeli nazwisko obecnej osoby jest mniejsze niż nazwisko porównywanej osoby
            więcej niż 0 jeżeli nazwisko obecnej osoby jest większe niż nazwisko porównywanej osoby
             Jeśli dwa nazwiska są równe zwraca wartość porównania imion.</returns>
        </member>
        <member name="M:CRM.Osoba.ToString">
            <summary>
            Metoda tworzy i zwraca napis z danymi osoby.
            </summary>
            <returns>Napis zawierający dane osoby</returns>
        </member>
        <member name="T:CRM.OsobaKontakt">
            <summary>
            Klasa definiująca osobę, z którą się kontaktujemy. Dziedziczy po klasie Osoba.
            </summary>
        </member>
        <member name="F:CRM.OsobaKontakt._telefon">
            <summary>
            Telefon do osoby, z którą się kontaktujemy.
            </summary>
        </member>
        <member name="F:CRM.OsobaKontakt._mail">
            <summary>
            Mail do osoby, z którą się kontaktujemy.
            </summary>
        </member>
        <member name="F:CRM.OsobaKontakt._notatki">
            <summary>
            Notatki o osobie, z którą się kontaktujemy.
            </summary>
        </member>
        <member name="M:CRM.OsobaKontakt.PoprawnyTelefon(System.String)">
            <summary>
            Metoda sprawdzająca, czy podany numer telefonu jest poprawny.
            </summary>
            <param name="telefon">Telefon osoby, z którą się kontaktujemy.</param>
            <returns>Null, jeżeli numer jest niepoprawny
            telefon (czyli wpisany napis), jeżeli telefon został podany poprawnie.</returns>
        </member>
        <member name="M:CRM.OsobaKontakt.PoprawnyEmail(System.String)">
            <summary>
            Metoda sprawdzająca, czy podany email jest poprawny.
            </summary>
            <param name="email">Email osoby, z którą się kontaktujemy.</param>
            <returns>Null, jeżeli email jest niepoprawny,
            email (czyli wpisany napis), jeżeli email został podany poprawnie.</returns>
        </member>
        <member name="M:CRM.OsobaKontakt.PoprawnoscRegex(System.String,System.String)">
            <summary>
            Metoda sprawdzająca, czy podany napis jest zgodny z podaną do niego maską.
            </summary>
            <param name="napis">Napis, który chcemy zwalidować.</param>
            <param name="maska">Sposób, w jaki napis powinien być zapisany.</param>
            <returns>Prawdę, jeśli jest zgodny,
            Nieprawdę, jeśli nie jest zgodny.</returns>
        </member>
        <member name="M:CRM.OsobaKontakt.Equals(CRM.OsobaKontakt)">
            <summary>
            Metoda sprawdza, czy dwie osoby kontaktowe są tą samą osobą kontaktową.
            Porównuje ich Imiei Nazwisko oraz Telefon i Mail, jeśli te nie są nullami.
            </summary>
            <param name="other">Osoba, z którą porównujemy.</param>
            <returns>Prawda, jeśli są,
            Fałsz, jeśli nie są.</returns>
        </member>
        <member name="M:CRM.OsobaKontakt.Clone">
            <summary>
            Metoda tworzy kopię obiektu osoby, z którą się kontaktujemy.
            </summary>
            <returns>Kopia obiektu OsobaKontakt.</returns>
        </member>
        <member name="M:CRM.OsobaKontakt.ToString">
            <summary>
            Metoda tworzy i zwraca napis z danymi osoby do kontaktu.
            </summary>
            <returns>Napis zawierający dane osoby do kontaktu.</returns>
        </member>
        <member name="T:CRM.Pracownik">
            <summary>
            Klasa definiująca pracownika firmy, która prowadzi CRM. Dziedziczy po klasie OsobaKontakt.
            </summary>
        </member>
        <member name="F:CRM.Pracownik._dataRozpoczeciaPracy">
            <summary>
            Data, kiedy pracownik zaczął pracę w firmie prowadzącej CRM.
            </summary>
        </member>
        <member name="M:CRM.Pracownik.ZapiszXML(System.String)">
            <summary>
            Metoda zapisuje dane pracownika do pliku XML.
            </summary>
            <param name="nazwa">Nazwa pliku do którego zapisujemy dane, musi się kończyć na ".xml".</param>
        </member>
        <member name="M:CRM.Pracownik.OdczytajXML(System.String)">
            <summary>
            Metoda odczytująca dane pracownika z pliku XML.
            </summary>
            <param name="nazwa">Nazwa pliku z którego odczytujemy dane, musi się kończyć na ".xml".</param>
            <returns>Odczytany plik jako obiekt klasy Pracownik.</returns>
        </member>
        <member name="M:CRM.Pracownik.ZapiszJSON(System.String)">
            <summary>
            Metoda zapisująca dane pracownika do pliku JSON.
            </summary>
            <param name="nazwa">Nazwa pliku z którego odczytujemy dane, musi się kończyć na ".json".</param>
        </member>
        <member name="M:CRM.Pracownik.OdczytajJSON(System.String)">
            <summary>
            Metoda odczytująca dane pracownika z pliku JSON.
            </summary>
            <param name="nazwa">Nazwa pliku z którego odczytujemy dane, musi się kończyć na ".json".</param>
            <returns>Odczytany plik jako obiekt klasy Pracownik.</returns>
        </member>
        <member name="M:CRM.Pracownik.ToString">
            <summary>
            Metoda tworzy i zwraca napis z danymi pracownika.
            </summary>
            <returns>Napis zawierający dane pracownika.</returns>
        </member>
        <member name="T:CRM.ProductNotFoundException">
            <summary>
            Klasa tworząca wyjątek, gdy produkt nie został znaleziony w umowie
            </summary>
        </member>
        <member name="M:CRM.ProductNotFoundException.#ctor">
            <summary>
            Konstruktor wyjątku nieparametryczny
            </summary>
        </member>
        <member name="M:CRM.ProductNotFoundException.#ctor(System.String)">
            <summary>
            Konstruktor wyjątku z komunikatem
            </summary>
            <param name="komunikat">Komunikat do wyświetlenia w razie wystąpienia wyjątku</param>
        </member>
        <member name="T:CRM.Jednostki">
            <summary>
            Typ wyliczeniowy. Zawiera podstawowe jednostki miary produktów.
            </summary>
        </member>
        <member name="F:CRM.Produkt._aktualnyNumer">
            <summary>
            Zmienna statyczna przechowująca informację o ostatnim aktualnym numerze produktu.
            </summary>
        </member>
        <member name="F:CRM.Produkt._nazwa">
            <summary>
            Nazwa produktu.
            </summary>
        </member>
        <member name="F:CRM.Produkt._cena">
            <summary>
            Cena produktu.
            </summary>
        </member>
        <member name="F:CRM.Produkt._kod">
            <summary>
            Kod produktu.
            </summary>
        </member>
        <member name="F:CRM.Produkt._jednostka">
            <summary>
            Jednostka miary produktu.
            </summary>
        </member>
        <member name="P:CRM.Produkt.Nazwa">
            <summary>
            Właściwości
            </summary>
        </member>
        <member name="M:CRM.Produkt.#cctor">
            <summary>
            Konstruktor statyczny wywołujący początkową wartość aktualnego numeru.
            </summary>
        </member>
        <member name="M:CRM.Produkt.#ctor">
            <summary>
            Podstawowy konstruktor produktu. Ustawia nazwę i kod na puste wartości, cenę na zero, a jednostkę domyślnie na sztuki.
            </summary>
        </member>
        <member name="M:CRM.Produkt.#ctor(System.String,System.Double)">
            <summary>
            Konstruktor parametryczny produktu. Ustawia cenę i nazwę na podstawie wartości podanych przez użytkownika.
            </summary>
            <param name="nazwa">Nazwa podana przez użytkownika</param>
            <param name="cena">Cena podana przez użytkownika</param>
        </member>
        <member name="M:CRM.Produkt.#ctor(System.String,System.Double,CRM.Jednostki)">
            <summary>
            Konstruktor parametryczny produktu. Ustawia cenę, nazwę i jednostkę miary na podstawie wartości podanych przez użytkownika.
            </summary>
            <param name="nazwa">Nazwa podana przez użytkownika</param>
            <param name="cena">Cena podana przez użytkownika</param>
            <param name="jednostka">Jednostka podana przez użytkownika</param>
        </member>
        <member name="M:CRM.Produkt.ToString">
            <summary>
            Tworzy i zwraca napis zawierający informacje o produkcie.
            </summary>
            <returns>Napis z informacjami o produkcie</returns>
        </member>
        <member name="M:CRM.Produkt.CompareTo(CRM.Produkt)">
            <summary>
            Porównuje dwa produkty na podstawie kodu.
            </summary>
            <param name="other">Produkt, z którym porównujemy.</param>
            <returns>Zwraca wartość porównania kodów produktów:
            0 jeżeli kody są równe
            mniej niż 0 jeżeli kod bieżącego produktu jest mniejszy niż kod produktu, z którym prównujemy
            więcej niż 0 jeżeli kod bieżącego produktu jest większy niż kod produktu, z którym prównujemy
             </returns>
        </member>
        <member name="M:CRM.Produkt.Clone">
            <summary>
            Metoda tworzy obiekt klasy Produkt bedacy kopia biezacego produktu.
            </summary>
            <returns>Zwraca nowy produkt będący kopią bieżącego produktu</returns>
        </member>
        <member name="M:CRM.Produkt.ZapiszXML(System.String)">
            <summary>
            Zapisuje informacje o produkcie do pliku XML
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
        </member>
        <member name="M:CRM.Produkt.OdczytajXML(System.String)">
            <summary>
            Odczytuje informacje o produkcie z pliku XML
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
            <returns>Zwraca odczytany plik jako obiekt klasy Produkt</returns>
        </member>
        <member name="M:CRM.Produkt.ZapiszJSON(System.String)">
            <summary>
            Zapisuje informacje o produkcie do pliku JSON
            </summary>
            <param name="nazwa">Nazwa pliku JSON</param>
        </member>
        <member name="M:CRM.Produkt.OdczytajJSON(System.String)">
            <summary>
            Odczytuje informacje o produkcie z pliku JSON
            </summary>
            <param name="nazwa">Nazwa pliku JSON</param>
            <returns>Zwraca odczytany plik jako obiekt klasy Produkt</returns>
        </member>
        <member name="F:CRM.Umowa._nrUmowy">
            <summary>
            Numer umowy
            </summary>
        </member>
        <member name="F:CRM.Umowa._dataUmowy">
            <summary>
            Data zawarcia umowy
            </summary>
        </member>
        <member name="F:CRM.Umowa._pracownikOdp">
            <summary>
            Pracownik organizacji prowadzącej CRM, który zawarł umowę.
            </summary>
        </member>
        <member name="F:CRM.Umowa._aktualnyNumer">
            <summary>
            Aktualny numer umowy
            </summary>
        </member>
        <member name="F:CRM.Umowa._kupioneProdukty">
            <summary>
            Słownik zawierający informacje o kupionych produktach i zakupionej ilości każdego z nich.
            </summary>
        </member>
        <member name="F:CRM.Umowa._listaKupionychProduktow">
            <summary>
            Lista kupionych produktów generowana na podstawie słownika KupioneProdukty
            </summary>
        </member>
        <member name="F:CRM.Umowa._ilosciKupionychProduktow">
            <summary>
            Lista ilości zakupionych produktów generowana na podstawie słownika KupioneProdukty
            </summary>
        </member>
        <member name="P:CRM.Umowa.NrUmowy">
            <summary>
            Właściwości
            </summary>
        </member>
        <member name="M:CRM.Umowa.#cctor">
            <summary>
            Konstruktor statyczny ustawiający początkową wartość aktulnego numeru umowy.
            </summary>
        </member>
        <member name="M:CRM.Umowa.#ctor">
            <summary>
            Podstawowy konstruktor umowy. Ustawia numer umowy i PracownkaOdp na puste wartości, a datę zawarcia umowy na dziś.
            </summary>
        </member>
        <member name="M:CRM.Umowa.#ctor(CRM.Pracownik)">
            <summary>
            Konstruktor parametryczny Umowy. Ustawia numer umowy oraz PracownikaOdp
            </summary>
            <param name="pracownik">Pracownik z organizacji prowadzącej CRM odpowiedzialny za podpisanie umowy</param>
        </member>
        <member name="M:CRM.Umowa.#ctor(CRM.Pracownik,System.String)">
            <summary>
            Konstruktor parametryczny Umowy. Ustawia datę zawarcia umowy oraz PracownikOdp
            </summary>
            <param name="pracownik">Pracownik z organizacji prowadzącej CRM odpowiedzialny za podpisanie umowy</param>
            <param name="data">Data zawarcia umowy</param>
        </member>
        <member name="M:CRM.Umowa.Koszt">
            <summary>
            Funkcja zliczająca całkowity koszt wszystkich zakupionych produktów w umowie.
            </summary>
            <returns>Koszt wszystkich zakupionych produktów w umowie</returns>
        </member>
        <member name="M:CRM.Umowa.ZnajdzProdukt(System.String)">
            <summary>
            Funkcja wyszukująca produkt w umowie po kodzie. Jeśli nie ma produktu o takim kodzie w umowie, funkcja zwraca ProductNotFoundException.
            </summary>
            <param name="kod">Kod szukanego produktu</param>
            <returns>Produkt o podanym kodzie lub wyjątek ProductNotFoundException</returns>
        </member>
        <member name="M:CRM.Umowa.JesliSztuki(CRM.Produkt,System.Double)">
            <summary>
            Funkcja, która sprawdza czy jednostka miary produktu to szuka i jeśli tak - ilość zostaje zaokrąglona w dół do wartości całkowitych.
            </summary>
            <param name="produkt">Wybrany produkt dla którego sprawdzana jest jednostka</param>
            <param name="ilosc">Ilość wybranego produktu wprowadzona przez użytkownika</param>
            <returns>Wartość ilości produktu. Jeśli produkt liczony jest w sztukach, zwracana jest wartość ilości zaokrąlona w dół do najbliższej liczby całkowitej</returns>
        </member>
        <member name="M:CRM.Umowa.SlownikDoListy">
            <summary>
            Funkcja zapisująca obiekty ze slownika KupioneProdukty do odpowiednich list
            </summary>
        </member>
        <member name="M:CRM.Umowa.DodajProdukt(CRM.Produkt)">
            <summary>
            Dodawanie 1 produktu do umowy. Jeśli produkt już jest w umowie, dodaje się do niego jedną jednostkę.
            </summary>
            <param name="produkt">Dodawany produkt</param>
        </member>
        <member name="M:CRM.Umowa.DodajProdukt(CRM.Produkt,System.Double)">
            <summary>
            Dodawanie produktu do umowy wraz z ilością. Jeśli produkt już jest w umowie, dodaje się do istniejącej ilości dodatkowe jednostki nowej ilości.
            </summary>
            <param name="produkt">Dodawany produkt</param>
            <param name="ilosc">Ilość dodawanego produktu</param>
        </member>
        <member name="M:CRM.Umowa.UsunProdukt(CRM.Produkt)">
            <summary>
            Usuwanie produktu z umowy.
            </summary>
            <param name="produkt">Usuwany produkt.</param>
            <returns>True jeśli produkt był w umowie i został usunięty. W przeciwnym wypadku - false</returns>
        </member>
        <member name="M:CRM.Umowa.UsunProduktKod(System.String)">
            <summary>
            Usuwanie produktu z umowy wg kodu produktu.
            </summary>
            <param name="kod">Kod usuwanego produktu</param>
            <returns>True jeśli produkt był w umowie i został usunięty. W przeciwnym wypadku - false</returns>
        </member>
        <member name="M:CRM.Umowa.ZmienIlosc(CRM.Produkt,System.Double)">
            <summary>
            Zmiana ilości produktu będącego w umowie.
            </summary>
            <param name="produkt">Wybrany produkt</param>
            <param name="ilosc">Nowa ilość produktu</param>
            <returns>True jeśli produkt był w umowie i zmieniono jego ilość na nową, w przeciwnym wypadku - false</returns>
        </member>
        <member name="M:CRM.Umowa.ZmienIloscKod(System.String,System.Double)">
            <summary>
            Zmiana ilości produktu będącego w umowie wg kodu.
            </summary>
            <param name="kod">Kod wybranego produktu</param>
            <param name="ilosc">Nowa ilość produktu</param>
            <returns>True jeśli produkt był w umowie i zmieniono jego ilość na nową, w przeciwnym wypadku - false</returns>
        </member>
        <member name="M:CRM.Umowa.ToString">
            <summary>
            Funkcja wypisuje informacje na temat umowy wraz z wszystkimi zakupionymi produktami i ilościami
            </summary>
            <returns>Zwraca napis z informacją o umowie</returns>
        </member>
        <member name="M:CRM.Umowa.Clone">
            <summary>
            Funkcja tworzy kopię bieżącej umowy.
            </summary>
            <returns>Nowy obiekt klasy Umowa, będący kopią bieżącego</returns>
        </member>
        <member name="M:CRM.Umowa.ZapiszBin(System.String)">
            <summary>
            Zapis do pliku binarnego umowy
            </summary>
            <param name="nazwa">Nazwa pliku BIN</param>
        </member>
        <member name="M:CRM.Umowa.OdczytajBin(System.String)">
            <summary>
            Odczyt z pliku binarnego umowy
            </summary>
            <param name="nazwa">Nazwa pliku BIN</param>
            <returns>Zwraca odczytany plik jako obiekt klasy Umowa</returns>
        </member>
    </members>
</doc>
